{"version":3,"sources":["state/actions.js","compo/Register.js","compo/Login.js","compo/Admin.js","compo/User.js","App.js","serviceWorker.js","state/reducer.js","index.js"],"names":["LoginAction","input","_ref5","Object","asyncToGenerator","regenerator_default","a","mark","_callee5","dispatch","newObjToLogin","res","data","wrap","_context5","prev","next","username","pass","type","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","sent","json","stop","_x5","apply","this","arguments","Register","state","name","repeat","ev","setState","defineProperty","target","value","props","registerAction","react_default","createElement","className","data-validate","required","onChange","handleText","bind","placeholder","onClick","sendToRegister","msg","Component","register","connect","_ref","_callee","newObjToRegister","_context","console","log","_x","RegisterAction","Login","handleTextforlogin","sendToLogin","login","Admin","admin","User","DataUser","Logout","vacationID","checked","AddFollow","_this","role","clientName","sendToLogout","vacations","map","v","style","width","class","src","image","destination","description","start_date","end_date","price","FollowChange","id","followers","user","_ref4","_callee4","response","_context4","_x4","_ref3","_callee3","_context3","_x3","_ref6","_callee6","_context6","concat","vacationId","_x6","App","CheckSession","compo_User","react_router_dom","to","react_router","path","exact","component","app","_ref2","_callee2","_context2","success","_x2","Boolean","window","location","hostname","match","initialState","myReducer","length","undefined","action","assign","userName","userData","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d32e35bc.chunk.js","sourcesContent":["export const RegisterAction = (input) => {\r\n   \r\n    return async function (dispatch) {\r\n       \r\n       let newObjToRegister = input;\r\n\r\n       if(newObjToRegister.name === \"\"||newObjToRegister.username===\"\"||newObjToRegister.pass===\"\"||newObjToRegister.repeat===\"\"){\r\n           console.log(\"all mendatory\")\r\n           dispatch({\r\n            type: \"ALL_INPUT_MANDATORY\",\r\n            data: null\r\n        });\r\n           \r\n       }else if(newObjToRegister.pass !== newObjToRegister.repeat){\r\n            console.log(\"The password is incorrect\")\r\n            dispatch({\r\n                type: \"INCORRECTSECOND_PASS\",\r\n                data: null\r\n            });\r\n\r\n       }else{\r\n        \r\n        let res = await fetch('http://localhost:3000/register', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newObjToRegister)\r\n        });\r\n\r\n        let data = await res.json();\r\n        dispatch({\r\n            type: \"REGISTERED\",\r\n            data: data.msg\r\n        });\r\n       }\r\n    };\r\n}\r\n\r\nexport const CheckSession = () =>{\r\n    return async function (dispatch){\r\n        let response = await fetch('http://localhost:3000/checksession');\r\n        let data = await response.json();\r\n        if(data.success === true){\r\n            dispatch({\r\n                type: \"CHECK_SESSION\",\r\n                data: data\r\n            });\r\n        }else{\r\n            dispatch({\r\n                type: \"SESSION_FAILED\",\r\n                data: null\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const DataUser = () =>{\r\n    return async function (dispatch){\r\n        let response = await fetch('http://localhost:3000/user');\r\n        let data = await response.json();\r\n        debugger;\r\n            dispatch({\r\n                type: \"UserData\",\r\n                data: data\r\n            });\r\n    }\r\n}\r\n\r\nexport const Logout = () =>{\r\n    return async function (dispatch){\r\n        let response = await fetch('http://localhost:3000/logout');\r\n        let data = await response.json();\r\n            dispatch({\r\n                type: \"LOGOUT\",\r\n                data: data\r\n            });\r\n    }\r\n}\r\n\r\nexport const LoginAction = (input) => {\r\n   \r\n    return async function (dispatch) {\r\n       \r\n       let newObjToLogin = input;\r\n       if(newObjToLogin.username ===\"\" || newObjToLogin.pass===\"\"){\r\n        dispatch({\r\n            type: \"LOGIN_ERROR\",\r\n            data: null\r\n        });\r\n       }else{\r\n        let res = await fetch('http://localhost:3000/login', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newObjToLogin)\r\n        });\r\n\r\n        let data = await res.json();\r\n        dispatch({\r\n            type: \"LOGIN_STATUS\",\r\n            data: data\r\n        });\r\n       }\r\n    };\r\n}\r\n\r\nexport const AddFollow = (vacationId) => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        let res = await fetch(`http://localhost:3000/addfollow?vacationId=${vacationId}`);\r\n\r\n        let data = await res.json();\r\n\r\n        dispatch({\r\n            type: \"ADD_FOLLOW\",\r\n            data: data\r\n        });\r\n\r\n    };\r\n\r\n}\r\n","import React, { Component } from 'react';\nimport {RegisterAction} from '../state/actions';\nimport {connect} from 'react-redux';\n\n\nclass Register extends Component {\n  state ={\n    name:\"\",\n    username:\"\",\n    pass:\"\",\n    repeat:\"\"\n\n  }\n  handleText(ev)\n  {\n    this.setState({ [ev.target.name]:ev.target.value  })\n  }\n\n  sendToRegister(){\n    this.props.registerAction(this.state)\n    \n  }\n\n  render() {\n    return (\n      <div className=\"registerstyle\">\n              <div className=\"limiter\">\n                <div className=\"container-login100\">\n                  <div className=\"login100-more\"></div>\n\n                  <div className=\"wrap-login100 p-l-50 p-r-50 p-t-72 p-b-50\">\n                    <form className=\"login100-form validate-form\"/>\n                      <span className=\"login100-form-title p-b-59\">\n                        Sign Up\n                      </span>\n\n                      <div className=\"wrap-input100 validate-input\" data-validate=\"Name is required\">\n                        <span className=\"label-input100\">Full Name</span>\n                        <input required onChange={this.handleText.bind(this)}  className=\"input100\" type=\"text\" name=\"name\" placeholder=\"Name...\"/>\n                        <span className=\"focus-input100\"></span>\n                      </div>\n\n                      <div className=\"wrap-input100 validate-input\" data-validate=\"Username is required\">\n                        <span className=\"label-input100\">Username</span>\n                        <input required onChange={this.handleText.bind(this)}  className=\"input100\" type=\"text\" name=\"username\" placeholder=\"Username...\"/>\n                        <span className=\"focus-input100\"></span>\n                      </div>\n\n                      <div className=\"wrap-input100 validate-input\" data-validate = \"Password is required\">\n                        <span className=\"label-input100\">Password</span>\n                        <input required onChange={this.handleText.bind(this)}  className=\"input100\" type=\"password\" name=\"pass\" placeholder=\"*************\"/>\n                        <span className=\"focus-input100\"></span>\n                      </div>\n\n                      <div className=\"wrap-input100 validate-input\" data-validate = \"Repeat Password is required\">\n                        <span className=\"label-input100\">Repeat Password</span>\n                        <input required onChange={this.handleText.bind(this)} className=\"input100\" type=\"password\" name=\"repeat\" placeholder=\"*************\"/>\n                        <span className=\"focus-input100\"></span>\n                      </div>\n\n                      <div className=\"container-login100-form-btn\">\n                        <div className=\"wrap-login100-form-btn\">\n                          <div className=\"login100-form-bgbtn\"></div>\n                          <button onClick={this.sendToRegister.bind(this)} className=\"login100-form-btn\">\n                            Sign Up\n                          </button>\n                        </div>\n                      </div>\n                      <div className=\"wrap-input100 validate-input\" data-validate = \"Repeat Password is required\">\n                        {this.props.msg}\n                      </div>\n                  </div>\n                </div>\n              </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => { \n  return { msg: state.msg };\n}; \n\nconst  mapDispatchToProps = dispatch => {  \n  return  { \n      //every field change new action will dispatch \n      registerAction: function(input) { \n           return  dispatch(RegisterAction(input));\n          // return  dispatch({type:\"LOAD_MOVIES\", data:[]});\n        }\n      }\n  };\nconst register = connect(mapStateToProps, mapDispatchToProps)(Register);\n\nexport default register;\n","import React, { Component } from 'react';\nimport {LoginAction} from '../state/actions';\nimport {connect} from 'react-redux';\n\n\nclass Login extends Component {\n  state ={\n    username:\"\",\n    pass:\"\"\n  }\n  handleTextforlogin(ev)\n  {\n    this.setState({ [ev.target.name]:ev.target.value  })\n  }\n\n  sendToLogin(){\n    this.props.LoginAction(this.state)\n  }\n\n  render() {\n    return (\n      <div className=\"registerstyle\">\n              <div className=\"limiter\">\n                <div className=\"container-login100\">\n                  <div className=\"login100-more\"></div>\n\n                  <div className=\"wrap-login100 p-l-50 p-r-50 p-t-72 p-b-50\">\n                    <form className=\"login100-form validate-form\"/>\n                      <span className=\"login100-form-title p-b-59\">\n                        Login\n                      </span>\n\n                      <div className=\"wrap-input100 validate-input\" data-validate=\"Username is required\">\n                        <span className=\"label-input100\">Username</span>\n                        <input required onChange={this.handleTextforlogin.bind(this)}  className=\"input100\" type=\"text\" name=\"username\" placeholder=\"Username...\"/>\n                        <span className=\"focus-input100\"></span>\n                      </div>\n\n                      <div className=\"wrap-input100 validate-input\" data-validate = \"Password is required\">\n                        <span className=\"label-input100\">Password</span>\n                        <input required onChange={this.handleTextforlogin.bind(this)}  className=\"input100\" type=\"password\" name=\"pass\" placeholder=\"*************\"/>\n                        <span className=\"focus-input100\"></span>\n                      </div>\n\n                      <div className=\"container-login100-form-btn\">\n                        <div className=\"wrap-login100-form-btn\">\n                          <div className=\"login100-form-bgbtn\"></div>\n                          <button onClick={this.sendToLogin.bind(this)} className=\"login100-form-btn\">\n                            Login\n                          </button>\n                        </div>\n                      </div>\n                      <div className=\"wrap-input100 validate-input\" data-validate = \"Repeat Password is required\">\n                        {this.props.msg}\n                      </div>\n                  </div>\n                </div>\n              </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => { \n  return { msg: state.msg };\n}; \n\nconst  mapDispatchToProps = dispatch => {  \n  return  { \n      //every field change new action will dispatch \n      LoginAction: function(input) { \n        debugger;\n           return  dispatch(LoginAction(input));\n          // return  dispatch({type:\"LOAD_MOVIES\", data:[]});\n        }\n      }\n  };\nconst login = connect(mapStateToProps, mapDispatchToProps)(Login);\n\nexport default login;\n","import React, { Component } from 'react';\nimport {LoginAction} from '../state/actions';\nimport {connect} from 'react-redux';\n\n\nclass Admin extends Component {\n  \n  \n\n  sendToLogin(){\n    this.props.LoginAction(this.state)\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>admin page</h1>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => { \n  return { msg: state.msg };\n}; \n\nconst  mapDispatchToProps = dispatch => {  \n  return  { \n      //every field change new action will dispatch \n      LoginAction: function() { \n        debugger;\n           return  dispatch(LoginAction());\n          // return  dispatch({type:\"LOAD_MOVIES\", data:[]});\n        }\n      }\n  };\nconst admin = connect(mapStateToProps, mapDispatchToProps)(Admin);\n\nexport default admin;\n","import React, { Component } from 'react';\nimport {Logout , DataUser , AddFollow} from '../state/actions';\nimport {connect} from 'react-redux';\n\n\n\nclass User extends Component {\n  \n\n  componentDidMount(){\n    this.props.DataUser();\n  }\n  \n   sendToLogout(){\n    this.props.Logout();\n  }\n\n  FollowChange(vacationID,ev){\n    if(ev.target.checked === true){\n      console.log('checked on')\n      console.log(vacationID);\n      this.props.AddFollow(vacationID);\n    }else{\n      console.log('remove checked')\n    }\n  }\n\n  render() {\n    if(this.props.role == \"user\"){\n      return (\n        <div className=\"container\"> \n          <div className=\"menu\">\n            <div className=\"row mt-3\">\n              <div className=\"col-4\">\n                <h2>VacationHunter</h2>\n              </div>\n              <div className=\"col-4\">\n                <h3>Hello {this.props.clientName}</h3>\n              </div>\n              <div className=\"col-4\">\n                <button onClick={this.sendToLogout.bind(this)} className=\"btn btn-primary\">Logout</button>\n              </div>\n            </div>\n          </div>\n          <div className=\"row mt-3\">\n            <div className=\"col\">\n              {this.props.vacations.map(v=>{\n                return(\n                  <div className=\"card\" style={{ width: \"18rem\" }}>\n                  <img class=\"card-img-top\" src={v.image} />\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title\">{v.destination}</h5>\n                    <p className=\"card-text\">{v.description}</p>\n                    <ul className=\"list-group list-group-flush\">\n                        <li className=\"list-group-item\">\n                            <p><label className=\"fas fa-plane-departure plane-icon\"></label>{v.start_date}</p>\n                            <p><label className=\"fas fa-plane-arrival plane-icon\"></label>{v.end_date}</p>\n                        </li>\n                        <li className=\"list-group-item\">{v.price}<label className=\"fas fa-dollar-sign dollar-icon\"></label></li>\n                        <li className=\"list-group-item\"><input checked={false} onChange={this.FollowChange.bind(this, v.id)} type=\"checkbox\" /><label className=\"fas fa-eye eye-icon\">{v.followers}</label></li>\n                    </ul>\n                  </div>\n                  </div>\n                )\n              })}\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = state => { \n  return { role: state.role,clientName:state.clientName,id: state.id, vacations: state.vacations };\n}; \n\nconst  mapDispatchToProps = dispatch => {  \n  return  { \n      Logout: function() { \n        return  dispatch(Logout());\n        },\n        DataUser: function(){\n          return dispatch(DataUser());\n        },\n        AddFollow:function(vacationID){\n          return dispatch(AddFollow());\n        }\n  }};\nconst user = connect(mapStateToProps, mapDispatchToProps)(User);\n\nexport default user;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Register from \"./compo/Register\";\nimport Login from \"./compo/Login\";\nimport {connect} from 'react-redux';\nimport Admin from \"./compo/Admin\";\nimport User from \"./compo/User\";\n\nimport {CheckSession} from \"./state/actions\"\n\nclass App extends Component {\n\n  async componentDidMount(){\n    this.props.CheckSession();\n  }\n\n  render() {\n    if(!this.props.role){\n      return (\n        <div className=\"App\">\n          <Router>\n            <div>\n              <nav>\n                <ul>\n                  <li>\n                    <Link to=\"/\">Login</Link>\n                  </li>\n                  <li>\n                    <Link to=\"/register\">Register</Link>\n                  </li>\n                </ul>\n              </nav>\n  \n              <Route path=\"/\" exact component={Login} />\n              <Route path=\"/register/\" component={Register} />\n            </div>\n          </Router>\n        </div>\n      );\n    }\n    if(this.props.role === \"user\"){\n      return(\n        <div>\n          <User />\n          {/* <Router>\n            <div>\n              <Route exact path=\"/user\"  component={User} />\n            </div>\n          </Router> */}\n        </div>\n      )\n    }\n    if(this.props.role === \"admin\"){\n      return(\n        <div>\n          <Router>\n            <div>\n              <nav>\n                <ul>\n                  <li>\n                    <Link to=\"/admin\">admin</Link>\n                  </li>\n                </ul>\n              </nav>\n              <Route path=\"/admin\" exact component={Admin} />\n            </div>\n          </Router>\n        </div>\n      )\n    }\n\n    \n  }\n}\nconst  mapDispatchToProps = dispatch => {  \n  return  { \n      CheckSession: function() { \n           return  dispatch(CheckSession());\n        }\n      }\n  };\n\nconst mapStateToProps = state => { \n  return { role: state.role };\n}; \nconst app = connect(mapStateToProps,mapDispatchToProps)(App);\nexport default app;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n    vacations:[]\r\n\r\n};\r\n \r\nconst myReducer = (state = initialState, action) => {\r\n    let newState = {};\r\n    debugger;\r\n    switch (action.type) {\r\n         case 'INCORRECTSECOND_PASS':\r\n         newState = Object.assign({}, state, {\r\n                msg: \"The password is incorrect\"\r\n                });\r\n                return newState;\r\n        \r\n        case 'ALL_INPUT_MANDATORY':\r\n        newState = Object.assign({}, state, {\r\n            msg: \"All inputs are mandatory\"\r\n            });\r\n            return newState;\r\n\r\n        case 'LOGIN_ERROR':\r\n        newState = Object.assign({}, state, {\r\n            msg: \"Username and password are mandetory\"\r\n            });\r\n            return newState;\r\n\r\n        case 'REGISTERED':\r\n        newState = Object.assign({}, state, {\r\n            msg: action.data\r\n            });\r\n            return newState;\r\n\r\n        case 'LOGIN_STATUS':\r\n        newState = Object.assign({}, state, {\r\n            role: action.data.role,\r\n            clientName: action.data.name,\r\n            id: action.data.id,\r\n            userName:action.data.username\r\n            });\r\n            return newState;\r\n\r\n        case 'CHECK_SESSION':\r\n        newState = Object.assign({}, state, {\r\n            id: action.data.id,\r\n            role: action.data.role,\r\n            clientName: action.data.name,\r\n            userName:action.data.username\r\n            });\r\n            debugger;\r\n            return newState;\r\n            \r\n        case 'SESSION_FAILED':\r\n        newState = Object.assign({}, state, {\r\n            role: \"\",\r\n            clientName: \"\"\r\n            });\r\n            return newState;\r\n        \r\n        case 'LOGOUT':\r\n        newState = Object.assign({}, state, {\r\n            role:action.data.role\r\n            });\r\n            return newState;\r\n        \r\n        case 'UserData':\r\n        newState = Object.assign({}, state, {\r\n            id:action.data.userData.id,\r\n            role:action.data.userData.role ,\r\n            clientName:action.data.userData.clientName ,\r\n            userName:action.data.userData.userName,\r\n            vacations:action.data.userData.vacations\r\n            });\r\n            debugger;\r\n            return newState;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default myReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport myReducer from \"./state/reducer\";\nimport { Provider } from \"react-redux\"; \nimport { createStore, applyMiddleware } from 'redux'; \nimport thunk from 'redux-thunk';\n\nconst store = createStore(myReducer, applyMiddleware(thunk));\n\nReactDOM.render(<Provider store={store}>\n    <App />\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}